{"ast":null,"code":"var _jsxFileName = \"/Users/gimhanishara/Desktop/ReactWithMariaDB/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [country, setCountry] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [wage, setWage] = useState(0); //to display list of employees\n\n  const [employeeList, setEmployeeList] = useState([]); //to pass data to the database\n\n  const addEmployee = () => {\n    //create endpoint of the reaquest(endpoint that we wanna make a request)\n    Axios.post(\"http://localhost:3001/create\", {\n      //body object (we send this body object to the backend)--> that's why we call req.body.name like in backend\n      //key: value pair\n      name: name,\n      age: age,\n      country: country,\n      position: position,\n      wage: wage\n    }).then(() => {\n      //callback function because this is a promise\n      //until our request is done, then ---> do that\n      //console.log(\"success\");\n      //alert(\"Successfully added a new employee\");\n      setEmployeeList([...employeeList, {\n        name: name,\n        age: age,\n        country: country,\n        position: position,\n        wage: wage\n      }]);\n    });\n  }; //to get the information from the database\n\n\n  const getEmployees = () => {\n    //create endpoint of the reaquest(endpoint that we wanna make a request)\n    Axios.get(\"http://localhost:3001/employees\", {}).then(response => {\n      //callback function because this is a promise\n      //until our request is done, then ---> do that\n      //convert the values that we received from the backend into the list\n      setEmployeeList(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Information\",\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: event => {\n          setAge(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setCountry(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Position:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setPosition(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Wage (year):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: event => {\n          setWage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEmployee,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getEmployees,\n        children: \"Show Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), employeeList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Name: \", val.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Age: \", val.age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Country: \", val.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Position: \", val.position]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Wage: \", val.wage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"/uC0sOTG2kdBSrxEhiBKGIGjuMI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimhanishara/Desktop/ReactWithMariaDB/client/src/App.js"],"names":["useState","Axios","App","name","setName","age","setAge","country","setCountry","position","setPosition","wage","setWage","employeeList","setEmployeeList","addEmployee","post","then","getEmployees","get","response","data","event","target","value","map","val","key"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [country, setCountry] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [wage, setWage] = useState(0);\n\n  //to display list of employees\n  const [employeeList, setEmployeeList] = useState([]);\n\n  //to pass data to the database\n  const addEmployee = () => {\n    //create endpoint of the reaquest(endpoint that we wanna make a request)\n    Axios.post(\"http://localhost:3001/create\", {\n      //body object (we send this body object to the backend)--> that's why we call req.body.name like in backend\n\n      //key: value pair\n      name: name,\n      age: age,\n      country: country,\n      position: position,\n      wage: wage,\n    }).then(() => {\n      //callback function because this is a promise\n      //until our request is done, then ---> do that\n      //console.log(\"success\");\n      //alert(\"Successfully added a new employee\");\n      setEmployeeList([\n        ...employeeList,\n        {\n          name: name,\n          age: age,\n          country: country,\n          position: position,\n          wage: wage,\n        },\n      ]);\n    });\n  };\n\n  //to get the information from the database\n  const getEmployees = () => {\n    //create endpoint of the reaquest(endpoint that we wanna make a request)\n    Axios.get(\"http://localhost:3001/employees\", {}).then((response) => {\n      //callback function because this is a promise\n      //until our request is done, then ---> do that\n\n      //convert the values that we received from the backend into the list\n      setEmployeeList(response.data);\n    });\n  };\n\n  return (\n      <div className=\"App\">\n        <div className=\"Information\">\n          <lable>Name:</lable>\n          <input\n              type=\"text\"\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n          />\n          <lable>Age:</lable>\n          <input\n              type=\"number\"\n              onChange={(event) => {\n                setAge(event.target.value);\n              }}\n          />\n          <lable>Country:</lable>\n          <input\n              type=\"text\"\n              onChange={(event) => {\n                setCountry(event.target.value);\n              }}\n          />\n          <lable>Position:</lable>\n          <input\n              type=\"text\"\n              onChange={(event) => {\n                setPosition(event.target.value);\n              }}\n          />\n          <lable>Wage (year):</lable>\n          <input\n              type=\"number\"\n              onChange={(event) => {\n                setWage(event.target.value);\n              }}\n          />\n          <button onClick={addEmployee}>Add Employee</button>\n        </div>\n        <div className=\"employees\">\n          <button onClick={getEmployees}>Show Employees</button>\n          {employeeList.map((val, key) => {\n            return (\n                <div className=\"employee\">\n                  <h3>Name: {val.name}</h3>\n                  <h3>Age: {val.age}</h3>\n                  <h3>Country: {val.country}</h3>\n                  <h3>Position: {val.position}</h3>\n                  <h3>Wage: {val.wage}</h3>\n                </div>\n            );\n          })}\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}